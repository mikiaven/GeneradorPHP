/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmGenerador.java
 *
 * Created on Nov 25, 2012, 2:18:40 PM
 */
package UIL;

import BRL.brcGenerador;
import DAL.dacConexion;
import java.io.File;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Miguel
 */
public class frmGenerador extends javax.swing.JFrame {

    private dacConexion objConexion;
    private brcGenerador clsGenerador;
    private JFileChooser fchPath;
    private ArrayList listClases;
    private ArrayList listTablas;

    /** Creates new form frmGenerador */
    public frmGenerador() {
        this.listTablas = new ArrayList();
        this.listClases = new ArrayList();
        this.objConexion = new dacConexion();
        this.clsGenerador = new brcGenerador();
        initComponents();
        ImageIcon img = new ImageIcon(getClass().getResource("/IMG/blue.png"));
        this.setIconImage(img.getImage());
        this.setSize(new java.awt.Dimension(1024, 550));
        this.validate();
    }

    @SuppressWarnings("UseOfObsoleteCollectionType")
    private void CargarTablas() {
        DefaultTableModel model = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Tabla", "Nombre Clase", "Generar"
                }) {

            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean[]{
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };

        tblTablas.setColumnSelectionAllowed(true);
        spnlTablas.setViewportView(tblTablas);
        tblTablas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        try {
            ResultSet rs = this.clsGenerador.getTablas();
            Vector vDatos;
            while (rs.next()) {
                vDatos = new Vector();
                vDatos.add(rs.getString(1));
                vDatos.add(rs.getString(1));
                vDatos.add(true);
                model.addRow(vDatos);
            }
            this.tblTablas.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(frmGenerador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tlbTool = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        sepSeparadorUno = new javax.swing.JToolBar.Separator();
        lblSeleccionador = new javax.swing.JLabel();
        cbxSeleccionador = new javax.swing.JComboBox();
        sepSeparadorSeleccionar = new javax.swing.JToolBar.Separator();
        lblFormatoTexto = new javax.swing.JLabel();
        cbxFormatoTexto = new javax.swing.JComboBox();
        pnlBarraEstado = new javax.swing.JPanel();
        lblBarraEstado = new javax.swing.JLabel();
        spnCentral = new javax.swing.JSplitPane();
        spnGenerador = new javax.swing.JSplitPane();
        pnlGenerador = new javax.swing.JPanel();
        pnlFormulario = new javax.swing.JPanel();
        txtURL = new javax.swing.JTextField();
        txtBaseDatos = new javax.swing.JTextField();
        lblUsuario = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JTextField();
        lblBaseDatos = new javax.swing.JLabel();
        lblURL = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblContrasena = new javax.swing.JLabel();
        pnlTablas = new javax.swing.JPanel();
        spnlTablas = new javax.swing.JScrollPane();
        tblTablas = new javax.swing.JTable();
        pnlSeleccionador = new javax.swing.JPanel();
        lblReemplazar = new javax.swing.JLabel();
        txtReemplazar = new javax.swing.JTextField();
        lblPor = new javax.swing.JLabel();
        txtPor = new javax.swing.JTextField();
        btnReemplazar = new javax.swing.JButton();
        sepSeparadorAdicionar = new javax.swing.JToolBar.Separator();
        lblAdicionarTexto = new javax.swing.JLabel();
        txtAdicionarTexto = new javax.swing.JTextField();
        btnPrefijo = new javax.swing.JButton();
        btnSufijo = new javax.swing.JButton();
        tpnlClases = new javax.swing.JTabbedPane();
        mnbMenuPrincipal = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        mniSalir = new javax.swing.JMenuItem();
        mnuAyuda = new javax.swing.JMenu();
        mniAcerca = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generador de Clases PHP");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(900, 500));
        setName("frmGenerador"); // NOI18N

        tlbTool.setRollover(true);
        tlbTool.setPreferredSize(new java.awt.Dimension(900, 61));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/add.png"))); // NOI18N
        btnNuevo.setText("Conectar");
        btnNuevo.setFocusable(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        tlbTool.add(btnNuevo);

        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/setting.png"))); // NOI18N
        btnGenerar.setText("Generar");
        btnGenerar.setEnabled(false);
        btnGenerar.setFocusable(false);
        btnGenerar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGenerar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        tlbTool.add(btnGenerar);

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/save.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.setFocusable(false);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        tlbTool.add(btnGuardar);
        tlbTool.add(sepSeparadorUno);

        lblSeleccionador.setText("Seleccionar:");
        tlbTool.add(lblSeleccionador);

        cbxSeleccionador.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Ninguno" }));
        cbxSeleccionador.setEnabled(false);
        cbxSeleccionador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSeleccionadorActionPerformed(evt);
            }
        });
        tlbTool.add(cbxSeleccionador);
        tlbTool.add(sepSeparadorSeleccionar);

        lblFormatoTexto.setText("Formato Texto:");
        tlbTool.add(lblFormatoTexto);

        cbxFormatoTexto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minúscula", "Mayúscula", "Capitalizado" }));
        cbxFormatoTexto.setEnabled(false);
        cbxFormatoTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFormatoTextoActionPerformed(evt);
            }
        });
        tlbTool.add(cbxFormatoTexto);

        getContentPane().add(tlbTool, java.awt.BorderLayout.NORTH);

        pnlBarraEstado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlBarraEstado.setPreferredSize(new java.awt.Dimension(900, 24));
        pnlBarraEstado.setLayout(new java.awt.BorderLayout());

        lblBarraEstado.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBarraEstado.setText("Estado:");
        lblBarraEstado.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlBarraEstado.add(lblBarraEstado, java.awt.BorderLayout.CENTER);

        getContentPane().add(pnlBarraEstado, java.awt.BorderLayout.SOUTH);

        spnCentral.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        spnCentral.setMaximumSize(new java.awt.Dimension(900, 450));
        spnCentral.setMinimumSize(new java.awt.Dimension(900, 450));
        spnCentral.setOneTouchExpandable(true);
        spnCentral.setPreferredSize(new java.awt.Dimension(900, 450));

        spnGenerador.setDividerLocation(480);
        spnGenerador.setLastDividerLocation(480);
        spnGenerador.setMaximumSize(new java.awt.Dimension(800, 800));
        spnGenerador.setMinimumSize(new java.awt.Dimension(100, 200));
        spnGenerador.setOneTouchExpandable(true);
        spnGenerador.setPreferredSize(new java.awt.Dimension(800, 550));

        pnlGenerador.setMaximumSize(new java.awt.Dimension(450, 250));
        pnlGenerador.setMinimumSize(new java.awt.Dimension(450, 250));
        pnlGenerador.setPreferredSize(new java.awt.Dimension(450, 250));

        pnlFormulario.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlFormulario.setMaximumSize(new java.awt.Dimension(450, 250));
        pnlFormulario.setMinimumSize(new java.awt.Dimension(450, 250));
        pnlFormulario.setPreferredSize(new java.awt.Dimension(450, 250));

        txtURL.setText("jdbc:mysql://localhost/");

        txtBaseDatos.setText("Nombre de la Base de Datos");

        lblUsuario.setText("Usuario:");

        txtContrasena.setText("Contraseña");

        lblBaseDatos.setText("Base de Datos:");

        lblURL.setText("URL:");

        txtUsuario.setText("Nombre de Usuario");

        lblContrasena.setText("Contraseña:");

        javax.swing.GroupLayout pnlFormularioLayout = new javax.swing.GroupLayout(pnlFormulario);
        pnlFormulario.setLayout(pnlFormularioLayout);
        pnlFormularioLayout.setHorizontalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormularioLayout.createSequentialGroup()
                        .addComponent(lblBaseDatos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBaseDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormularioLayout.createSequentialGroup()
                        .addComponent(lblUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormularioLayout.createSequentialGroup()
                        .addComponent(lblURL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormularioLayout.createSequentialGroup()
                        .addComponent(lblContrasena)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlFormularioLayout.setVerticalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBaseDatos)
                    .addComponent(txtBaseDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContrasena)
                    .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblURL)
                    .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlGeneradorLayout = new javax.swing.GroupLayout(pnlGenerador);
        pnlGenerador.setLayout(pnlGeneradorLayout);
        pnlGeneradorLayout.setHorizontalGroup(
            pnlGeneradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneradorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlGeneradorLayout.setVerticalGroup(
            pnlGeneradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneradorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        spnGenerador.setLeftComponent(pnlGenerador);

        pnlTablas.setMaximumSize(new java.awt.Dimension(450, 250));
        pnlTablas.setMinimumSize(new java.awt.Dimension(450, 250));
        pnlTablas.setPreferredSize(new java.awt.Dimension(450, 250));
        pnlTablas.setLayout(new java.awt.BorderLayout());

        spnlTablas.setMaximumSize(new java.awt.Dimension(450, 250));
        spnlTablas.setMinimumSize(new java.awt.Dimension(450, 250));
        spnlTablas.setPreferredSize(new java.awt.Dimension(450, 250));

        tblTablas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tabla", "Nombre Clase", "Generar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTablas.setColumnSelectionAllowed(true);
        tblTablas.setMaximumSize(new java.awt.Dimension(450, 250));
        tblTablas.setMinimumSize(new java.awt.Dimension(450, 250));
        tblTablas.setPreferredSize(new java.awt.Dimension(450, 250));
        spnlTablas.setViewportView(tblTablas);
        tblTablas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        pnlTablas.add(spnlTablas, java.awt.BorderLayout.CENTER);

        pnlSeleccionador.setMaximumSize(new java.awt.Dimension(450, 60));
        pnlSeleccionador.setMinimumSize(new java.awt.Dimension(450, 60));
        pnlSeleccionador.setPreferredSize(new java.awt.Dimension(450, 80));

        lblReemplazar.setText("Reemplazar Texto:");

        txtReemplazar.setEditable(false);
        txtReemplazar.setMinimumSize(new java.awt.Dimension(100, 22));
        txtReemplazar.setPreferredSize(new java.awt.Dimension(100, 22));

        lblPor.setText("por:");

        txtPor.setEditable(false);
        txtPor.setMinimumSize(new java.awt.Dimension(100, 22));
        txtPor.setPreferredSize(new java.awt.Dimension(100, 22));

        btnReemplazar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/ok.png"))); // NOI18N
        btnReemplazar.setEnabled(false);
        btnReemplazar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReemplazar.setMinimumSize(new java.awt.Dimension(57, 59));
        btnReemplazar.setPreferredSize(new java.awt.Dimension(57, 59));
        btnReemplazar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReemplazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReemplazarActionPerformed(evt);
            }
        });

        lblAdicionarTexto.setText("Adicionar:");

        txtAdicionarTexto.setEditable(false);
        txtAdicionarTexto.setMinimumSize(new java.awt.Dimension(100, 22));
        txtAdicionarTexto.setPreferredSize(new java.awt.Dimension(100, 22));

        btnPrefijo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/prefijo.png"))); // NOI18N
        btnPrefijo.setText("Prefijo");
        btnPrefijo.setEnabled(false);
        btnPrefijo.setFocusable(false);
        btnPrefijo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnPrefijo.setMaximumSize(new java.awt.Dimension(57, 59));
        btnPrefijo.setMinimumSize(new java.awt.Dimension(57, 59));
        btnPrefijo.setPreferredSize(new java.awt.Dimension(57, 59));
        btnPrefijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrefijoActionPerformed(evt);
            }
        });

        btnSufijo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/sufijo.png"))); // NOI18N
        btnSufijo.setText("Sufijo");
        btnSufijo.setEnabled(false);
        btnSufijo.setFocusable(false);
        btnSufijo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSufijo.setMaximumSize(new java.awt.Dimension(57, 59));
        btnSufijo.setMinimumSize(new java.awt.Dimension(57, 59));
        btnSufijo.setPreferredSize(new java.awt.Dimension(57, 59));
        btnSufijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSufijoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSeleccionadorLayout = new javax.swing.GroupLayout(pnlSeleccionador);
        pnlSeleccionador.setLayout(pnlSeleccionadorLayout);
        pnlSeleccionadorLayout.setHorizontalGroup(
            pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSeleccionadorLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAdicionarTexto)
                    .addComponent(lblReemplazar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAdicionarTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtReemplazar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSeleccionadorLayout.createSequentialGroup()
                        .addComponent(lblPor)
                        .addGap(73, 73, 73)
                        .addComponent(txtPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReemplazar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSeleccionadorLayout.createSequentialGroup()
                        .addComponent(btnPrefijo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSufijo, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                .addGap(902, 902, 902)
                .addComponent(sepSeparadorAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSeleccionadorLayout.setVerticalGroup(
            pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSeleccionadorLayout.createSequentialGroup()
                .addGroup(pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSeleccionadorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReemplazar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE)
                            .addGroup(pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblReemplazar)
                                .addComponent(txtReemplazar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPor)
                                .addComponent(txtPor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSufijo, 0, 0, Short.MAX_VALUE)
                            .addGroup(pnlSeleccionadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblAdicionarTexto)
                                .addComponent(txtAdicionarTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnPrefijo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE)))
                        .addGap(322, 322, 322))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSeleccionadorLayout.createSequentialGroup()
                        .addContainerGap(332, Short.MAX_VALUE)
                        .addComponent(sepSeparadorAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pnlTablas.add(pnlSeleccionador, java.awt.BorderLayout.NORTH);

        spnGenerador.setRightComponent(pnlTablas);

        spnCentral.setTopComponent(spnGenerador);

        tpnlClases.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tpnlClases.setAutoscrolls(true);
        tpnlClases.setMaximumSize(new java.awt.Dimension(900, 150));
        tpnlClases.setMinimumSize(new java.awt.Dimension(900, 150));
        tpnlClases.setPreferredSize(new java.awt.Dimension(900, 150));
        spnCentral.setRightComponent(tpnlClases);

        getContentPane().add(spnCentral, java.awt.BorderLayout.CENTER);

        mnuArchivo.setText("Archivo");

        mniSalir.setText("Salir");
        mniSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSalirActionPerformed(evt);
            }
        });
        mnuArchivo.add(mniSalir);

        mnbMenuPrincipal.add(mnuArchivo);

        mnuAyuda.setText("Ayuda");

        mniAcerca.setText("Acerca");
        mniAcerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAcercaActionPerformed(evt);
            }
        });
        mnuAyuda.add(mniAcerca);

        mnbMenuPrincipal.add(mnuAyuda);

        setJMenuBar(mnbMenuPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
// TODO add your handling code here:
    this.objConexion = new dacConexion();
    this.objConexion.setsBaseDatos(this.txtBaseDatos.getText());
    this.objConexion.setsUsuario(this.txtUsuario.getText());
    this.objConexion.setsContrasena(this.txtContrasena.getText());
    this.objConexion.setsURL(this.txtURL.getText());
    if (this.objConexion.Conectar()) {
        this.clsGenerador.setcConexion(this.objConexion.getConnection());
        this.btnGenerar.setEnabled(true);
        this.cbxSeleccionador.setEnabled(true);
        this.cbxFormatoTexto.setEnabled(true);
        this.txtReemplazar.setEditable(true);
        this.txtPor.setEditable(true);
        this.btnReemplazar.setEnabled(true);
        this.txtAdicionarTexto.setEditable(true);
        this.btnSufijo.setEnabled(true);
        this.btnPrefijo.setEnabled(true);
        this.lblBarraEstado.setText("Conexion Exitosa!");
    } else {
        this.btnGenerar.setEnabled(false);
        this.btnGuardar.setEnabled(false);
        this.cbxSeleccionador.setEnabled(false);
        this.cbxFormatoTexto.setEnabled(false);
        this.txtReemplazar.setEditable(false);
        this.txtPor.setEditable(false);
        this.btnReemplazar.setEnabled(false);
        this.txtAdicionarTexto.setEditable(false);
        this.btnSufijo.setEnabled(false);
        this.btnPrefijo.setEnabled(false);
        this.lblBarraEstado.setText("Falló al conectar!");
        this.spnGenerador.resetToPreferredSizes();
    }
    this.tpnlClases.removeAll();
    this.CargarTablas();
    this.spnGenerador.setLastDividerLocation(0);
}//GEN-LAST:event_btnNuevoActionPerformed

    @SuppressWarnings("ObjectEqualsNull")
private void mniSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSalirActionPerformed
// TODO add your handling code here:
    this.dispose();
    if (!this.clsGenerador.getcConexion().equals(null)) {
        this.clsGenerador.setcConexion(null);
        this.objConexion.Desconectar();
    }
}//GEN-LAST:event_mniSalirActionPerformed

    @SuppressWarnings("CallToThreadDumpStack")
private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
// TODO add your handling code here:           

    String url = new java.io.File("").getAbsolutePath() + "\\data\\";
    this.fchPath = new JFileChooser();
    this.fchPath.setCurrentDirectory(new java.io.File(url));
    this.fchPath.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    this.fchPath.setDialogTitle("Seleccione el Directorio en el que se generarán las Clases");
    this.fchPath.showSaveDialog(this.getContentPane());
    this.fchPath.setDialogType(JFileChooser.SAVE_DIALOG);
    File fselec = fchPath.getSelectedFile();

    if (fselec != null) {
        try {
            for (int i = 0; i < this.tpnlClases.getTabCount(); i++) {
                try {
                    String sPath = fselec.getAbsolutePath() + "\\" + ((JScrollPane) this.tpnlClases.getComponentAt(i)).getName() + ".php";
                    FileOutputStream fo = new FileOutputStream(sPath, false);
                    //fo.flush();
                    ObjectOutputStream objout = new ObjectOutputStream(fo);
                    JScrollPane spnl = ((JScrollPane) this.tpnlClases.getComponentAt(i));
                    JViewport vprt = (JViewport) spnl.getComponent(0);
                    JTextArea txa = (JTextArea) vprt.getView();
                    objout.writeObject(txa.getText().trim());
                    objout.close();
                    fo.close();
                } catch (Exception err) {
                    System.err.println("ERROR AL GUARDAR!!! : " + err.getMessage());
                    err.printStackTrace();
                }
            }
        }
        catch (Exception ex) {
            Logger.getLogger(frmGenerador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_btnGuardarActionPerformed

private void mniAcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAcercaActionPerformed
// TODO add your handling code here:
    frmAcerca frm = new frmAcerca(this, rootPaneCheckingEnabled);
    frm.show();
}//GEN-LAST:event_mniAcercaActionPerformed

private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
// TODO add your handling code here:
    this.listTablas = new ArrayList();
    this.listClases = new ArrayList();
    this.tpnlClases.removeAll();

    for (int i = 0; i < this.tblTablas.getRowCount(); i++) {
        if (this.tblTablas.getValueAt(i, 2).equals(true)) {
            this.listClases.add(this.tblTablas.getValueAt(i, 1).toString());
            this.listTablas.add(this.tblTablas.getValueAt(i, 0).toString());
        }
    }

    for (int i = 0; i < this.listTablas.size(); i++) {
        JTextArea txa = new JTextArea();
        JScrollPane pnlClase = new JScrollPane(txa);
        pnlClase.setName(this.listClases.get(i).toString());
        txa.setName(this.listClases.get(i).toString());
        txa.setText(this.clsGenerador.getClase(this.listTablas.get(i).toString(), this.listClases.get(i).toString()));
        txa.setAutoscrolls(true);
        pnlClase.setAutoscrolls(true);
        this.tpnlClases.add(pnlClase);
    }

    if (this.tpnlClases.getTabCount() > 0) {
        this.btnGuardar.setEnabled(true);
    } else {
        this.btnGuardar.setEnabled(false);
    }
}//GEN-LAST:event_btnGenerarActionPerformed

private void cbxSeleccionadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSeleccionadorActionPerformed
// TODO add your handling code here:
    if (this.cbxSeleccionador.getSelectedItem().toString().equals("Todos")) {
        for (int i = 0; i < this.tblTablas.getRowCount(); i++) {
            this.tblTablas.setValueAt(true, i, 2);
        }
    } else {
        for (int i = 0; i < this.tblTablas.getRowCount(); i++) {
            this.tblTablas.setValueAt(false, i, 2);
        }
    }
}//GEN-LAST:event_cbxSeleccionadorActionPerformed

private void cbxFormatoTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFormatoTextoActionPerformed
// TODO add your handling code here:
    String strFormateado = new String();
    for (int i = 0; i < this.tblTablas.getRowCount(); i++) {
        if (this.tblTablas.getValueAt(i, 2).equals(true)) {
            if (this.cbxFormatoTexto.getSelectedItem().toString().equals("Mayúscula")) {
                strFormateado = this.tblTablas.getValueAt(i, 1).toString().toUpperCase();                
            } else {
                if (this.cbxFormatoTexto.getSelectedItem().toString().equals("Minúscula")){
                    strFormateado = this.tblTablas.getValueAt(i, 1).toString().toLowerCase();
                }else{
                    strFormateado = this.tblTablas.getValueAt(i, 1).toString().substring(0, 1).toUpperCase();
                    strFormateado += this.tblTablas.getValueAt(i, 1).toString().substring(1, this.tblTablas.getValueAt(i, 1).toString().length()).toLowerCase();
                }
            }
            this.tblTablas.setValueAt(strFormateado, i, 1);
        }
    }
}//GEN-LAST:event_cbxFormatoTextoActionPerformed

private void btnReemplazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReemplazarActionPerformed
// TODO add your handling code here:
    for (int i = 0; i < this.tblTablas.getRowCount(); i++) {
        if (this.tblTablas.getValueAt(i, 2).equals(true)) {            
            String strReemplazado = this.tblTablas.getValueAt(i, 1).toString().replaceAll(this.txtReemplazar.getText(), this.txtPor.getText());
            this.tblTablas.setValueAt(strReemplazado, i, 1);
        }
    }
}//GEN-LAST:event_btnReemplazarActionPerformed

private void btnPrefijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrefijoActionPerformed
// TODO add your handling code here:
    for (int i = 0; i < this.tblTablas.getRowCount(); i++) {
        if (this.tblTablas.getValueAt(i, 2).equals(true)) {            
            this.tblTablas.setValueAt(this.txtAdicionarTexto.getText() + this.tblTablas.getValueAt(i, 1).toString(), i, 1);
        }
    }
}//GEN-LAST:event_btnPrefijoActionPerformed

private void btnSufijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSufijoActionPerformed
// TODO add your handling code here:
    for (int i = 0; i < this.tblTablas.getRowCount(); i++) {
        if (this.tblTablas.getValueAt(i, 2).equals(true)) {            
            this.tblTablas.setValueAt(this.tblTablas.getValueAt(i, 1).toString() + this.txtAdicionarTexto.getText(), i, 1);
        }
    }
}//GEN-LAST:event_btnSufijoActionPerformed

/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGenerador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGenerador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGenerador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGenerador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmGenerador().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPrefijo;
    private javax.swing.JButton btnReemplazar;
    private javax.swing.JButton btnSufijo;
    private javax.swing.JComboBox cbxFormatoTexto;
    private javax.swing.JComboBox cbxSeleccionador;
    private javax.swing.JLabel lblAdicionarTexto;
    private javax.swing.JLabel lblBarraEstado;
    private javax.swing.JLabel lblBaseDatos;
    private javax.swing.JLabel lblContrasena;
    private javax.swing.JLabel lblFormatoTexto;
    private javax.swing.JLabel lblPor;
    private javax.swing.JLabel lblReemplazar;
    private javax.swing.JLabel lblSeleccionador;
    private javax.swing.JLabel lblURL;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JMenuBar mnbMenuPrincipal;
    private javax.swing.JMenuItem mniAcerca;
    private javax.swing.JMenuItem mniSalir;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenu mnuAyuda;
    private javax.swing.JPanel pnlBarraEstado;
    private javax.swing.JPanel pnlFormulario;
    private javax.swing.JPanel pnlGenerador;
    private javax.swing.JPanel pnlSeleccionador;
    private javax.swing.JPanel pnlTablas;
    private javax.swing.JToolBar.Separator sepSeparadorAdicionar;
    private javax.swing.JToolBar.Separator sepSeparadorSeleccionar;
    private javax.swing.JToolBar.Separator sepSeparadorUno;
    private javax.swing.JSplitPane spnCentral;
    private javax.swing.JSplitPane spnGenerador;
    private javax.swing.JScrollPane spnlTablas;
    private javax.swing.JTable tblTablas;
    private javax.swing.JToolBar tlbTool;
    private javax.swing.JTabbedPane tpnlClases;
    private javax.swing.JTextField txtAdicionarTexto;
    private javax.swing.JTextField txtBaseDatos;
    private javax.swing.JTextField txtContrasena;
    private javax.swing.JTextField txtPor;
    private javax.swing.JTextField txtReemplazar;
    private javax.swing.JTextField txtURL;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
